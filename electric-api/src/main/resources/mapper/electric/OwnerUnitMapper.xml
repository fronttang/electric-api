<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rosenzest.electric.mapper.OwnerUnitMapper">


	<select id="queryInitialList" parameterType="com.rosenzest.electric.dto.OwnerUnitQuery" resultType="com.rosenzest.electric.vo.InitialOwnerUnitVo" >
		select t.* from (select o.id, o.name, o.layers, o.address, o.high_risk_type, o.rounds, o.detect_module,
		o.temperature, o.humidity, 
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name,
		(select count(1) from owner_unit_area a where a.unit_id = o.id and a.type = '2') as doors, 
		(select count(1) from ( select ua.id, (select count(1) from owner_unit_danger d where d.unit_area_id = ua.id) as dangers from owner_unit_area ua where ua.unit_id = o.id ) t where t.dangers>0) as households,
		(select count(1) as dangers from owner_unit_danger ud1 where ud1.unit_id = o.id and ud1.status = 0 and ud1.rounds = o.rounds ) as rectifications,
		(select count(1) as dangers from owner_unit_danger ud2 where ud2.unit_id = o.id and ud2.status = 1 and ud2.rounds = o.rounds ) as reexaminations,
		(select count(1) as dangers from owner_unit_danger ud3 where ud3.unit_id = o.id and ud3.status = 2 and ud3.rounds = o.rounds ) as finishs,
		(select count(1) as piles from charging_pile cp where cp.unit_id = o.id and cp.rounds = o.rounds ) as piles,
		(select count(1) from owner_unit_danger t where t.unit_id = o.id and t.rounds = o.rounds and t.status != '9' and t.status != '') as dangers,
		o.project_id, r.is_danger_notice,  r.is_complete, r.is_test, r.is_test_reason,
		CASE WHEN r.detect_status is null THEN 0 ELSE r.detect_status END as status 
		
		from owner_unit o left join owner_unit_report r on (r.unit_id = o.id and r.type = '1' )
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		
		where o.project_id = #{projectId} and o.type=#{type}
		
		<choose>
			<when test="type == 2 or type == 4">
			 and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street)
			</when>
			<when test="type == 3">
			 and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street and w.community = o.community)
			</when>
			<otherwise>
			and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street and w.community = o.community and w.hamlet = o.hamlet )
			</otherwise>
		</choose>
		
		) t where 1=1
		<if test="district != null and district != ''">
			and t.district = #{district}
		</if>
		<if test="street != null and street != ''">
			and t.street = #{street}
		</if>
		<if test="community != null and community != ''">
			and t.community = #{community}
		</if>
		<if test="hamlet != null and hamlet != ''">
			and t.hamlet = #{hamlet}
		</if>
		<if test="status != null and status != ''">
			and t.status = #{status}
		</if>
		<if test="highRiskType != null and highRiskType != ''">
			and t.high_risk_type = #{highRiskType}
		</if>
		<if test="keyword != null and keyword != ''">
			and (t.name like concat('%', #{keyword}, '%') or t.address like concat('%', #{keyword}, '%'))
		</if>
		order by t.id asc
	</select>
	
	<select id="getOwnerUnitById" parameterType="Long" resultType="com.rosenzest.electric.vo.OwnerUnitVo">
		select u.id,u.code,u.name,u.type,u.detect_id,u.detect_name,u.project_id,u.project_name,u.high_risk_type,
		u.entrust,u.address,u.contact,u.phone,u.acreage,u.layers,u.door_number,u.nature,u.test_start_date,u.test_end_date,
		u.test_content,r.code as initial_test_no,r1.code as again_test_no,r1.detect_data as again_test_data,u.panorama_pic,
		u.district,u.street,u.community,u.hamlet,u.house_no_pic,u.inspection_pic,
		u.temperature,u.humidity,u.weather,u.wind_speed 
		from owner_unit u 
		left join owner_unit_report r on (u.id = r.unit_id and r.type = 1) 
		left join owner_unit_report r1 on (u.id = r1.unit_id and r1.type = 2) 
		where u.id=#{unitId}
	</select>
	
	<select id="queryReviewList" parameterType="com.rosenzest.electric.dto.OwnerUnitReviewQuery" resultType="com.rosenzest.electric.vo.OwnerUnitReviewVo" >
		select t.* from (select o.id, o.name, o.address, o.high_risk_type, o.rounds, o.detect_module,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name,b.dict_label as street_name,c.dict_label as community_name,d.dict_label as hamlet_name,
		(select count(1) as dangers from owner_unit_danger ud1 where ud1.unit_id = o.id and ud1.status = 0 and ud1.rounds = o.rounds) as rectifications,
		(select count(1) as dangers from owner_unit_danger ud2 where ud2.unit_id = o.id and ud2.status = 1 and ud2.rounds = o.rounds) as reexaminations,
		(select count(1) as dangers from owner_unit_danger ud3 where ud3.unit_id = o.id and ud3.status = 2 and ud3.rounds = o.rounds) as finishs,
		(select count(1) from owner_unit_danger t where t.unit_id = o.id and t.rounds = o.rounds and t.status != '9' and t.status != '' ) as dangers, 
		(select count(1) as piles from charging_pile cp where cp.unit_id = o.id and cp.rounds = o.rounds ) as piles,
		CASE WHEN ur.detect_status is null THEN 0 ELSE ur.detect_status END as status,
		o.project_id
		from owner_unit o 
		left join owner_unit_report ur on (ur.unit_id = o.id and ur.type = '2')
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id =  o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id =  o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id =  o.project_id)
		where o.project_id = #{projectId} and o.type=#{type}
		
		<choose>
			<when test="type == 2 or type == 4">
			 and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street)
			</when>
			<when test="type == 3">
			 and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street and w.community = o.community)
			</when>
			<otherwise>
			and exists (select w.id from project_worker_area w where w.worker_id = #{workerId} and type= '1' and w.district = o.district and w.street = o.street and w.community = o.community and w.hamlet = o.hamlet )
			</otherwise>
		</choose>
		
		) t where t.dangers > 0

		<if test="district != null and district != ''">
			and t.district = #{district}
		</if>
		<if test="street != null and street != ''">
			and t.street = #{street}
		</if>
		<if test="community != null and community != ''">
			and t.community = #{community}
		</if>
		<if test="hamlet != null and hamlet != ''">
			and t.hamlet = #{hamlet}
		</if>
		<if test="status != null and status != ''">
			and t.status = #{status}
		</if>
		<if test="highRiskType != null and highRiskType != ''">
			and t.high_risk_type = #{highRiskType}
		</if>
		<if test="keyword != null and keyword != ''">
			and (t.name like concat('%', #{keyword}, '%') or t.address like concat('%', #{keyword}, '%'))
		</if>
		order by t.id asc
	</select>
	
	<select id="getOwnerUnitListByOwner" resultType="com.rosenzest.electric.miniapp.vo.OwnerUnitOverviewVo" >
		select o.id, o.name, o.type, o.project_id,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name 
		from owner_unit o 
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.project_id = #{projectId} and o.manager = #{userId} order by o.id asc
	</select>
	
	<select id="getOwnerUnitInfoById" resultType="com.rosenzest.electric.miniapp.vo.OwnerUnitOverviewVo" >
		select o.id, o.name, o.type, o.project_id,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name 
		from owner_unit o 
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.id = #{unitId}
	</select>
	
	<select id="getOwnerUnitListByGridman" resultType="com.rosenzest.electric.miniapp.vo.OwnerUnitOverviewVo" >
		select o.id, o.name, o.type, o.project_id,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name 
		from owner_unit o 
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.project_id = #{projectId} and o.gridman = #{userId} order by o.id asc
	</select>
	
	<select id="queryOwnerUnitListByGridman" resultType="com.rosenzest.electric.miniapp.vo.OwnerUnitOverviewVo" parameterType="com.rosenzest.electric.miniapp.dto.MiniAppOwnerUnitQuery" >
		select t.* from (select o.id, o.name, o.type, o.project_id, o.address, o.high_risk_type,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name,
		CASE WHEN r.detect_status is null THEN 0 ELSE r.detect_status END as status,  
		CASE WHEN r.detect_data is null THEN now() ELSE r.detect_data END as detect_data  
		from owner_unit o 
		left join owner_unit_report r on (r.unit_id = o.id and r.type = '1' )
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.project_id = #{projectId} and o.gridman = #{userId} order by o.id asc
		) t where 1=1
		<if test="district != null and district != ''"> and t.district = #{district} </if>
		<if test="street != null and street != ''"> and t.street = #{street} </if>
		<if test="community != null and community != ''"> and t.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and t.hamlet = #{hamlet} </if>
		<if test="status != null and status != ''"> and t.status = #{status} </if>
		<if test="highRiskType != null and highRiskType != ''"> and t.high_risk_type = #{highRiskType} </if>
		<if test="startDate != null and startDate != ''"> and date(t.detect_data) &gt;= #{startDate} </if>
		<if test="endDate != null and endDate != ''"> and date(t.detect_data) &lt;= #{endDate} </if>
		<if test="keyword != null and keyword != ''">
			and (t.name like concat('%', #{keyword}, '%') or t.address like concat('%', #{keyword}, '%'))
		</if>
		order by t.id asc
	</select>
	
	<select id="queryOwnerUnitListByAreaUser" resultType="com.rosenzest.electric.miniapp.vo.OwnerUnitOverviewVo" parameterType="com.rosenzest.electric.miniapp.dto.MiniAppAreaUserOwnerUnitQuery" >
		select t.* from (select o.id, o.name, o.type, o.project_id, o.address, o.high_risk_type,
		o.district, o.street, o.community, o.hamlet, a.dict_label as district_name, b.dict_label as street_name, c.dict_label as community_name, d.dict_label as hamlet_name,
		CASE WHEN r.detect_status is null THEN 0 ELSE r.detect_status END as status,  
		CASE WHEN r.detect_data is null THEN now() ELSE r.detect_data END as detect_data  
		from owner_unit o 
		left join owner_unit_report r on (r.unit_id = o.id and r.type = '1' )
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.project_id = #{projectId} 
		<if test="userDistrict != null and userDistrict != ''"> and o.district = #{userDistrict} </if>
		<if test="userStreet != null and userStreet != ''"> and o.street = #{userStreet} </if>
		<if test="userCommunity != null and userCommunity != ''"> and o.community = #{userCommunity} </if>
		<if test="userHamlet != null and userHamlet != ''"> and o.hamlet = #{userHamlet} </if>
		order by o.id asc
		) t where 1=1
		<if test="district != null and district != ''"> and t.district = #{district} </if>
		<if test="street != null and street != ''"> and t.street = #{street} </if>
		<if test="community != null and community != ''"> and t.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and t.hamlet = #{hamlet} </if>
		<if test="status != null and status != ''"> and t.status = #{status} </if>
		<if test="highRiskType != null and highRiskType != ''"> and t.high_risk_type = #{highRiskType} </if>
		<if test="startDate != null and startDate != ''"> and date(t.detect_data) &gt;= #{startDate} </if>
		<if test="endDate != null and endDate != ''"> and date(t.detect_data) &lt;= #{endDate} </if>
		<if test="keyword != null and keyword != ''">
			and (t.name like concat('%', #{keyword}, '%') or t.address like concat('%', #{keyword}, '%'))
		</if>
		order by t.id asc
	</select>
	
	<select id="unitStatistics" resultType="com.rosenzest.electric.miniapp.dto.UnitStatisticsDto" parameterType="com.rosenzest.electric.miniapp.vo.AreaUserInfoVo" >
		select u.id, u.name ,r.id as report_id, 
		CASE WHEN r.detect_status is null THEN 0 ELSE r.detect_status END as status 
		from owner_unit u
		left join owner_unit_report r on (r.unit_id = u.id and r.type = '1' )
		where u.project_id = #{projectId} 
		<if test="district != null and district != ''"> and u.district = #{district} </if>
		<if test="street != null and street != ''"> and u.street = #{street} </if>
		<if test="community != null and community != ''"> and u.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and u.hamlet = #{hamlet} </if>
	</select>
	
	<select id="countTodayDetectUnit" resultType="Long" parameterType="com.rosenzest.electric.miniapp.vo.AreaUserInfoVo" >
		select count(1)
		from owner_unit u
		left join owner_unit_report r on (r.unit_id = u.id and r.type = '1' ) 
		where u.project_id = 1 and date(r.detect_data) = date(now())
		<if test="district != null and district != ''"> and u.district = #{district} </if>
		<if test="street != null and street != ''"> and u.street = #{street} </if>
		<if test="community != null and community != ''"> and u.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and u.hamlet = #{hamlet} </if>
	</select>
	
</mapper>
