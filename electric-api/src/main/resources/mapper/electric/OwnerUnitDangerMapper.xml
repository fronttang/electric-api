<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rosenzest.electric.mapper.OwnerUnitDangerMapper">

	<resultMap id="OwnerUnitDangerVoResultMap" type="com.rosenzest.electric.vo.OwnerUnitDangerVo" >
    	<!--将json类型的rules字段修改为如下形式-->
    	<result column="formb" property="formb" typeHandler="com.rosenzest.model.base.type.JsonObjectTypeHandler" />
    	<result column="charging_pile_id" property="chargingPileId" typeHandler="com.rosenzest.model.base.type.LongListTypeHandler" />
  	</resultMap>
  	
	<resultMap id="OwnerUnitDangerMap" type="com.rosenzest.electric.entity.OwnerUnitDanger" >
    	<!--将json类型的rules字段修改为如下形式-->
    	<result column="formb" property="formb" typeHandler="com.rosenzest.model.base.type.JsonObjectTypeHandler" />
    	<result column="charging_pile_id" property="chargingPileId" typeHandler="com.rosenzest.model.base.type.LongListTypeHandler" />
  	</resultMap>

	<select id="queryOwnerUnitDanger" resultMap="OwnerUnitDangerVoResultMap" parameterType="com.rosenzest.electric.dto.OwnerUnitDangerQuery">
		select d.id, d.unit_id, u.`name` as unit_name, p.id as project_id, p.type as project_type, du.name as detect_name, d.building_id, ub.name as building_name, d.unit_area_id,ua.`name` as unit_area_name, 
		ua.type as unit_area_type, d.danger_id, d.form_type, d.form_id, d.form_code, d.level, d.description, d.suggestions, d.location,
		d.danger_pic, d.rectification_pic, d.detect_pic, d.reason, d.status, d.inspector, d.initial_time, 
		d.rectification, d.rectification_date, d.reviewer, d.reviewer_date, d.formb, d.charging_pile_id, d.remark, 
		( select GROUP_CONCAT(DISTINCT cp.name SEPARATOR '、') from charging_pile cp where cp.id member of(d.charging_pile_id) and cp.unit_id = d.unit_id ) as charging_pile_name 
		from owner_unit_danger d 
		left join owner_unit u on u.id = d.unit_id 
		left join project p on p.id = u.project_id
		left join detect_unit du on du.id = u.detect_id
		left join owner_unit_building ub on ub.id = d.building_id 
		left join owner_unit_area ua on ua.id = d.unit_area_id
		where d.unit_id = #{unitId}
		<if test="buildingId != null and buildingId != ''"> and d.building_id = #{buildingId} </if>
		<if test="unitAreaId != null and unitAreaId != ''"> and ua.id = #{unitAreaId} </if>
		<if test="unitAreatype != null and unitAreatype != ''"> and ua.type = #{unitAreatype} </if>
		<if test="status != null and status != ''"> and d.status = #{status} </if>
		<if test="initialDate != null and initialDate != ''"> and date(d.initial_time) = #{initialDate} </if>
		<if test="reviewDate != null and reviewDate != ''"> and date(d.rectification_date) = #{reviewDate} </if>
		<if test="startDate != null and startDate != ''"> and date(d.initial_time) &gt;= #{startDate} </if>
		<if test="endDate != null and endDate != ''"> and date(d.initial_time) &lt;= #{endDate} </if>
		<if test="startReviewDate != null and startReviewDate != ''"> and date(d.reviewer_date) &gt;= #{startReviewDate} </if>
		<if test="endReviewDate != null and endReviewDate != ''"> and date(d.reviewer_date) &lt;= #{endReviewDate} </if>
		<if test="formId != null and formId != ''"> and d.form_id = #{formId} </if>
		<if test="formCode != null and formCode != ''"> and d.form_code = #{formCode} </if>
		<if test="formType != null and formType != ''"> and d.form_type = #{formType} </if>
		<if test="formDataId != null and formDataId != ''"> and d.form_data_id = #{formDataId} </if>
		<choose>
			<when test="rounds != null and rounds != ''">
				and d.rounds = #{rounds} 
			</when>
			<otherwise>
				and d.rounds = u.rounds
			</otherwise>
		</choose>
		<if test="chargingPileId != null and chargingPileId != '' ">
		 and #{chargingPileId} member of(d.charging_pile_id) 
		 </if>
		<if test="keyword != null and keyword != ''">
			and (
			u.`name` like concat('%', #{keyword}, '%') 
			or ua.`name` like concat('%', #{keyword}, '%') 
			or d.location like concat('%', #{keyword}, '%')
			or ub.name like concat('%', #{keyword}, '%')
			)
		</if>
 
	</select>
	
	<select id="getOwnerUnitDangerById" resultMap="OwnerUnitDangerVoResultMap" parameterType="Long">
		select d.id, d.unit_id, u.`name` as unit_name, p.id as project_id, p.type as project_type, du.name as detect_name, d.building_id, ub.name as building_name, d.unit_area_id,ua.`name` as unit_area_name, 
		ua.type as unit_area_type, d.danger_id, d.form_type, d.form_id, d.form_code, d.level, d.description, d.suggestions, d.location,
		d.danger_pic, d.rectification_pic, d.detect_pic, d.reason, d.status, d.inspector, d.initial_time, 
		d.rectification, d.rectification_date, d.reviewer, d.reviewer_date, d.formb, d.charging_pile_id, d.remark, 
		( select GROUP_CONCAT(DISTINCT cp.name SEPARATOR '、') from charging_pile cp where cp.id member of(d.charging_pile_id) and cp.unit_id = d.unit_id ) as charging_pile_name 
		from owner_unit_danger d 
		left join owner_unit u on u.id = d.unit_id 
		left join project p on p.id = u.project_id
		left join detect_unit du on du.id = u.detect_id
		left join owner_unit_building ub on ub.id = d.building_id 
		left join owner_unit_area ua on ua.id = d.unit_area_id
		where d.id = #{dangerId}
	</select>
	
	<select id="countByChargingPileId"  parameterType="Long" resultType="Integer">
		select count(1) from owner_unit_danger d where #{pileId} member of(d.charging_pile_id)
	</select>
	
	<select id="countFormDangers" resultType="Integer">
		select count(1) as dangers from owner_unit_danger d 
		where d.form_id = #{formId} and d.unit_id = #{unitId} 
		<if test="unitAreaId != null">
			and d.unit_area_id = #{unitAreaId}
		</if>
		<if test="buildingId != null">
			and d.building_id = #{buildingId}
		</if>
	</select>
	
	<select id="countFormbDangers" resultType="Integer">
		select count(1) as dangers from owner_unit_danger d 
		where d.form_code = #{code} and d.form_type = 'B' and d.unit_id = #{unitId} 
		<if test="unitAreaId != null">
			and d.unit_area_id = #{unitAreaId}
		</if>
		<if test="buildingId != null">
			and d.building_id = #{buildingId}
		</if>
	</select>
	
	<select id="countByDataIdAndPileId" resultType="Integer">
		select count(1) from owner_unit_danger d where d.form_data_id = #{dataId}
		<if test="pileId != null">
			and #{pileId} member of(d.charging_pile_id)
		</if>
	</select>
	
	<select id="countByUnitIdAndDataIdAndPileId" resultType="Integer">
		select count(1) from owner_unit_danger d 
		left join owner_unit o on o.id = d.unit_id
		where d.unit_id = #{unitId} and d.rounds = o.rounds
		<if test="dataId != null">
			and d.form_data_id = #{dataId}
		</if>
		<if test="pileId != null">
			and #{pileId} member of(d.charging_pile_id)
		</if>
	</select>
	
	<select id="getOwnerUnitDangerByGridman" resultMap="OwnerUnitDangerMap" parameterType="Long">
		select d.id,d.level,d.status from owner_unit_danger d 
		where exists (
		select u.id from owner_unit u where u.id = d.unit_id 
		and exists (select project_id from sys_user s where s.user_id = u.gridman and s.project_id = u.project_id and s.user_id = #{userId} )
		)
	</select>
	
	<select id="getOwnerUnitDangerByAreaUser" resultType="com.rosenzest.electric.miniapp.vo.AreaUserDangerVo" parameterType="com.rosenzest.electric.miniapp.vo.AreaUserInfoVo">
		select ud.id,ud.level,ud.status,ud.unit_id,
		o.district, a.dict_label as district_name, o.street, b.dict_label as street_name, o.community, c.dict_label as community_name, o.hamlet, d.dict_label as hamlet_name
		from owner_unit_danger ud 
		left join owner_unit o on o.id = ud.unit_id
		left join sys_dict_data a on (o.district = a.dict_value and a.dict_type='district' and a.project_id = o.project_id)
		left join sys_dict_data b on (o.street = b.dict_value and b.dict_type='street' and b.project_id = o.project_id)
		left join sys_dict_data c on (o.community = c.dict_value and c.dict_type='community' and c.project_id = o.project_id)
		left join sys_dict_data d on (o.hamlet = d.dict_value and d.dict_type='hamlet' and d.project_id = o.project_id)
		where o.project_id = #{projectId} and o.rounds = ud.rounds 
		<if test="district != null and district != ''"> and o.district = #{district} </if>
		<if test="street != null and street != ''"> and o.street = #{street} </if>
		<if test="community != null and community != ''"> and o.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and o.hamlet = #{hamlet} </if>
	</select>
	
	<select id="getTodayDangersByAreaUser" resultMap="OwnerUnitDangerMap" parameterType="com.rosenzest.electric.miniapp.vo.AreaUserInfoVo">
		select d.id,d.level,d.status
		from owner_unit_danger d 
		left join owner_unit u on u.id = d.unit_id
		where u.project_id = #{projectId} and date(d.create_time) = date(now())
		<if test="district != null and district != ''"> and u.district = #{district} </if>
		<if test="street != null and street != ''"> and u.street = #{street} </if>
		<if test="community != null and community != ''"> and u.community = #{community} </if>
		<if test="hamlet != null and hamlet != ''"> and u.hamlet = #{hamlet} </if>
	</select>
	
	<select id="queryReviewOwnerUnitDanger" resultMap="OwnerUnitDangerVoResultMap" parameterType="com.rosenzest.electric.dto.OwnerUnitDangerQuery">
		select d.id, d.unit_id, u.`name` as unit_name, p.id as project_id, p.type as project_type, du.name as detect_name, d.building_id, ub.name as building_name, d.unit_area_id,ua.`name` as unit_area_name, 
		ua.type as unit_area_type, d.danger_id, d.form_type, d.form_id, d.form_code, d.level, d.description, d.suggestions, d.location,
		d.danger_pic, d.rectification_pic, d.detect_pic, d.reason, d.status, d.inspector, d.initial_time, 
		d.rectification, d.rectification_date, d.reviewer, d.reviewer_date, d.formb, d.charging_pile_id, d.remark, 
		( select GROUP_CONCAT(DISTINCT cp.name SEPARATOR '、') from charging_pile cp where cp.id member of(d.charging_pile_id) and cp.unit_id = d.unit_id ) as charging_pile_name 
		from owner_unit_danger d 
		left join owner_unit u on u.id = d.unit_id 
		left join project p on p.id = u.project_id
		left join detect_unit du on du.id = u.detect_id
		left join owner_unit_building ub on ub.id = d.building_id 
		left join owner_unit_area ua on ua.id = d.unit_area_id
		where d.unit_id = #{unitId} and (d.status != '9' and d.status != '') 
		<if test="buildingId != null and buildingId != ''"> and d.building_id = #{buildingId} </if>
		<if test="unitAreaId != null and unitAreaId != ''"> and ua.id = #{unitAreaId} </if>
		<if test="unitAreatype != null and unitAreatype != ''"> and ua.type = #{unitAreatype} </if>
		<if test="status != null and status != ''"> and d.status = #{status} </if>
		<if test="initialDate != null and initialDate != ''"> and date(d.initial_time) = #{initialDate} </if>
		<if test="reviewDate != null and reviewDate != ''"> and date(d.rectification_date) = #{reviewDate} </if>
		<if test="startDate != null and startDate != ''"> and date(d.initial_time) &gt;= #{startDate} </if>
		<if test="endDate != null and endDate != ''"> and date(d.initial_time) &lt;= #{endDate} </if>
		<if test="startReviewDate != null and startReviewDate != ''"> and date(d.reviewer_date) &gt;= #{startReviewDate} </if>
		<if test="endReviewDate != null and endReviewDate != ''"> and date(d.reviewer_date) &lt;= #{endReviewDate} </if>
		<if test="formId != null and formId != ''"> and d.form_id = #{formId} </if>
		<if test="formCode != null and formCode != ''"> and d.form_code = #{formCode} </if>
		<if test="formType != null and formType != ''"> and d.form_type = #{formType} </if>
		<if test="formDataId != null and formDataId != ''"> and d.form_data_id = #{formDataId} </if>
		<choose>
			<when test="rounds != null and rounds != ''">
				and d.rounds = #{rounds} 
			</when>
			<otherwise>
				and d.rounds = u.rounds
			</otherwise>
		</choose>
		<if test="chargingPileId != null and chargingPileId != '' ">
		 and #{chargingPileId} member of(d.charging_pile_id) 
		 </if>
		<if test="keyword != null and keyword != ''">
			and (
			u.`name` like concat('%', #{keyword}, '%') 
			or ua.`name` like concat('%', #{keyword}, '%') 
			or d.location like concat('%', #{keyword}, '%')
			or ub.name like concat('%', #{keyword}, '%')
			)
		</if>
 
	</select>
	
</mapper>
